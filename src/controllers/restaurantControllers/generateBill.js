const Restaurant = require('../../models/restaurant')
const User = require('../../models/user')
const response = require('../../utils/response')
const placeOrder = require('../../models/placeOrder')
const mongoose = require('mongoose')
const getTotalAmount = require('../../utils/getTotalAmount')
const findRestaurant = require('../../services/restaurant/findRestaurantById')
const user = require('../../models/user')
const ObjectId = require('mongoose').Types.ObjectId

/**
 *
 * @param {*} req
 * @param {*} res
 * @description This function is used to get all the bills generated by the admin
 * @requires {} restaurantId, fromDate, toDate
 * @returns {File} bill
 * @path /restaurant/generateBill
 * @method POST
 *
 *
 */

const generateBill = async (req, res) => {
  try {
    let { fromDate, toDate } = req.body
    const { mobileNumber } = req.userDetails


    // read a file billTemplate.html from templates folder
    // const billTemplate = fs.readFileSync(__dirname + '/../../templates/billTemplate.html', 'utf8')
    
    // console.log({body: req.body, user:mobileNumber})
    const restaurant = await Restaurant.findOne({mobileNumber});
    // const restaurant = await findRestaurant(restaurantId);
    // console.log(restaurant);
    console.log("ðŸš€ ~ file: generateBill.js ~ line 40 ~ generateBill ~ restaurant", restaurant)
    if(restaurant){
      fromDate = new Date(fromDate);
      toDate = new Date(toDate);
      toDate.setDate(toDate.getDate() + 1)

      let result = await placeOrder.find({
        $and:[

          {
            "updatedAt" : {"$gte":fromDate, "$lt": toDate}
          },
          {
            "restaurantId":restaurant._id
          },
          {
            orderStatus: 'PICKED_UP'
          }
        ]
      })
      if(result){
        const tempData = getTotalAmount(result);
        const totalAmount = parseInt(tempData.totalAmount)
        const platformFees = Math.round(totalAmount * 0.1)
        const gst = Math.round(platformFees * 0.18)
        const tcs = Math.round(platformFees * 0.01)
        const totalDeduction = platformFees + gst + tcs
        const totalPayout = totalAmount - totalDeduction
        const restaurantName = restaurant.restaurantName
        const restaurantAddress = restaurant.address
        const restaurantPhone = user?.mobileNumber
        const discountBySocon = tempData.discountAmount
        let totalOrders = tempData.totalOrders
        const from_date = new Date(fromDate).toLocaleDateString()
        const to_date = new Date(toDate).toLocaleDateString()
        const todayDate = new Date().toLocaleDateString()
        const monthOf = new Date(fromDate).toLocaleString('default', { month: 'long' })
        const data = {
          restaurantName,
          restaurantAddress,
          todayDate,
          restaurantPhone,
          totalAmount,
          discountBySocon,
          totalOrders,
          from_date,
          to_date,
          platformFees,
          gst,
          tcs,
          totalDeduction,
          monthOf,
          totalPayout,
          refundOrder:tempData.refund
        }
        return response(res, 200, true, 'Bill generated Successfully', {
          billInfo:{...data}
        })
        
      }
      else{
        response(res, 200, false, 'No order Found', { error:'No order Found'})
      }
    }
    else{
      
      response(res, 200, false, 'No restaurant found', { error: 'No Restaurant Found' })
    }
      
  } catch (error) {
    console.log(error)
    response(res, 500, false, 'Internal server error', { error: error.message })
  }
}
module.exports = generateBill
